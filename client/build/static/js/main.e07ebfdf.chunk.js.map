{"version":3,"sources":["components/Score.js","components/SlideNew.js","components/CarouselBootStrap.js","components/ConnectedList.js","js/actions/index.js","js/constants/action-types.js","components/Form.js","components/Home.js","components/Navbar.js","components/Login.js","components/Register.js","components/Review.js","components/AddReview.js","components/Appbar.js","App.js","serviceWorker.js","js/reducers/index.js","js/reducers/article.js","js/reducers/auth.js","js/store/index.js","index.js","images/Logo3.gif"],"names":["Score","className","this","props","score","React","Component","SlideNew","class","active","style","backgroundImage","image","to","pathname","id","state","artist","coverPrice","publisher","releaseDate","title","writer","body","name","src","alt","CarouselBootStrap","componentDidMount","getReviewsFromDB","dataDB","axios","get","then","response","data","setState","catch","error","console","log","data-ride","data-interval","map","entry","index","href","role","data-slide","aria-hidden","ConnectedList","article","el","key","connect","login","payload","type","ConnectedForm","handleChange","event","target","value","handleSubmit","preventDefault","addArticle","handleRemove","removeArticle","onSubmit","htmlFor","onChange","onClick","Home","dispatch","ConnectedLogin","e","email","password","credentials","post","res","window","location","onChangeEmail","onChangePassword","editOrAdd","Card","TextField","label","margin","variant","defaultValue","editValue","Button","getSession","Login","logout","Register","register1","action","method","ConnectedReview","display","admin","auth","color","Review","AddReview","editAction","document","getElementById","addAction","handleDelete","delete","multiline","rows","ConnectedAppbar","getAuth","authUser","AppBar","position","Toolbar","Logo","height","Typography","Appbar","userInfo","App","getCurrentUser","currentUser","path","exact","render","component","Boolean","hostname","match","rootReducer","combineReducers","concat","slice","length","Object","assign","store","createStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e07ebfdf.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../style/slider.css\"\r\n\r\nclass Score extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='score-container'>\r\n                                \r\n                    <h1 className='score-number'>{this.props.score}</h1>\r\n                    {/* <div className='critic-text'>\r\n                        <h4 className='score-text'>Based On: </h4>    \r\n                        <h4 className='score-text-critics'> 20 Critics</h4>\r\n                    </div> */}\r\n                                \r\n                </div>\r\n            </div>\r\n                \r\n                \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Score","import React from 'react'\r\nimport \"../style/slider.css\"\r\nimport Score from \"./Score\";\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nclass SlideNew extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div class={`carousel-item ${this.props.active}`} \r\n                style={{\r\n                    backgroundImage: `url(${this.props.image})`\r\n                }}\r\n            >\r\n                <Link to={{\r\n                    pathname: `/review/${this.props.id}`,\r\n                    state: {\r\n                        id: this.props.id,\r\n                        artist: this.props.artist,\r\n                        coverPrice: this.props.coverPrice,\r\n                        publisher: this.props.publisher,\r\n                        releaseDate: this.props.releaseDate,\r\n                        score: this.props.score,\r\n                        title: this.props.title,\r\n                        writer: this.props.writer,\r\n                        image: this.props.image,\r\n                        body: this.props.body,\r\n                        name: this.props.name,\r\n                       \r\n                    }\r\n                }}>\r\n                    <div class=\"\">\r\n                        <div class=\"bgBlack\">\r\n                            <div class=\"d-flex justify-content-center align-items-center slideNew\">\r\n                                <img src={this.props.image} class=\"d-block \" alt=\"...\" />\r\n                                <div class=\"d-flex flex-column justify-content-center ml-5\" id=\"comicDetails\">\r\n                                    <div>Writer: {this.props.writer}</div>\r\n                                    <div>Artist: {this.props.artist}</div>\r\n                                    <div>Publisher: {this.props.publisher}</div>\r\n                                    <div>Release Date: {this.props.releaseDate}</div>\r\n                                    <div>Cover Price: ${this.props.coverPrice}</div>\r\n                                    <Score score={this.props.score}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                   \r\n                </Link>\r\n                    \r\n            </div>\r\n                \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SlideNew","import React, { Component } from 'react';\r\nimport SlideNew from \"./SlideNew\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class CarouselBootStrap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dataDB: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getReviewsFromDB();\r\n    }\r\n\r\n    getReviewsFromDB = () => {\r\n        var dataDB;\r\n        axios.get('/reviewsdb/getReviews')\r\n            .then((response) => {\r\n                //console.log(response.data.data);\r\n                dataDB = response.data.data;\r\n                this.setState({dataDB});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error, \"get reviews from db unsuccessful\");\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\" data-interval=\"4000\">\r\n                    \r\n                    <div className=\"carousel-inner\">\r\n                        {this.state.dataDB.map( (entry, index) => {\r\n                            if (index == 0) {\r\n                                return <SlideNew id={entry['id']} \r\n                                                writer={entry['writer']}\r\n                                                title={entry['title']}\r\n                                                artist={entry['artist']}\r\n                                                publisher={entry['publisher']} \r\n                                                releaseDate={entry['releaseDate']}\r\n                                                coverPrice={entry['coverPrice']}\r\n                                                image={entry['imageURL']}\r\n                                                body={entry['body']}\r\n                                                score={entry['score']}\r\n                                                name={entry.name}\r\n                                                active={\"active\"}\r\n                                                />\r\n                            }\r\n                            else {\r\n                                return <SlideNew id={entry['id']}\r\n                                                writer={entry['writer']}\r\n                                                title={entry['title']}\r\n                                                artist={entry['artist']}\r\n                                                publisher={entry['publisher']} \r\n                                                releaseDate={entry['releaseDate']}\r\n                                                coverPrice={entry['coverPrice']}\r\n                                                image={entry['imageURL']}\r\n                                                body={entry['body']}\r\n                                                score={entry['score']}\r\n                                                name={entry.name}\r\n                                                active={\"\"}\r\n                                                />\r\n                            }\r\n                            \r\n                        }) \r\n                        }\r\n                        \r\n                        <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport CarouselBootStrap from './CarouselBootStrap.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return { article: state.article}\r\n}\r\n\r\nclass ConnectedList extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <ul>\r\n                    {this.props.article.map(el => (\r\n                        <li key={el.id}>{el.title}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\n\r\nexport default List;","import { ADD_ARTICLE, REMOVE_ARTICLE, LOGIN, LOGOUT } from '../constants/action-types'\r\n\r\nexport function addArticle(payload) {\r\n    return { type: ADD_ARTICLE, payload}\r\n}\r\n\r\nexport function removeArticle() {\r\n    return {type: REMOVE_ARTICLE}\r\n}\r\n\r\nexport function login(payload) {\r\n    return {type: LOGIN, payload}\r\n}\r\n\r\nexport function logout() {\r\n    return {type: LOGOUT}\r\n}","export const ADD_ARTICLE = 'ADD_ARTICLE'\r\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE'\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addArticle, removeArticle } from \"../js/actions/index\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addArticle: article => dispatch(addArticle(article)),\r\n        removeArticle: () => dispatch(removeArticle())\r\n    }\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { title } = this.state;\r\n        this.props.addArticle({ title });\r\n        this.setState({ title: ''})\r\n    }\r\n\r\n    handleRemove = () => {\r\n        this.props.removeArticle()\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        value={title}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    </div>\r\n                    <button type=\"submit\">SAVE</button>\r\n                    \r\n                </form>\r\n                <button onClick={this.handleRemove}>REMOVE</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\r\nexport default Form;","import React, { Component } from 'react';\r\nimport List from './ConnectedList';\r\nimport Form from './Form';\r\nimport CarouselBootStrap from './CarouselBootStrap.js';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                <CarouselBootStrap />\r\n                {/* <List />\r\n                <Form/> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport '../style/navbar.css';\r\nimport Home from './Home';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     if (props.authUser !== state.authUser) {\r\n    //         return {authUser: props.authUser}\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            authUser: null,\r\n            state: 'hello'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    logout = () => {\r\n        axios.get('/auth/logout')\r\n        .then( response => {\r\n            console.log(response);\r\n            \r\n        })\r\n        .catch( error => {\r\n            console.log( error )\r\n        })\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbarHeader\">\r\n                <div id=\"navbar\">\r\n                    <ul>\r\n                        <li id='title'>\r\n                            <Link to=\"/\" className=\"removeUnderline colorWhite\">Kabling Comics</Link>\r\n                        </li>\r\n                        <div className='align-right'>\r\n                            {this.props.admin && \r\n                                <li>\r\n                                    <Link to={{\r\n                                        pathname: '/addReview',\r\n                                        state: {\r\n                                            editOrAdd: \"add\"\r\n                                        }\r\n                                    }}className=\"removeUnderline colorWhite\">Add Review</Link>\r\n                                </li>\r\n                            }\r\n                            \r\n                            {!this.props.authUser && <li>\r\n                                <Link to='/login' className=\"removeUnderline colorWhite\"  >Login</Link>\r\n                            </li>}\r\n                            {this.props.authUser && <li>\r\n                                <a onClick={this.logout} className=\"removeUnderline colorWhite\">Logout</a>\r\n                            </li>}\r\n                            \r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport { login, logout } from '../js/actions'\r\nimport { connect } from 'react-redux'\r\nimport Logo from '../images/Logo3.gif'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: () => dispatch(login()),\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nclass ConnectedLogin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    \r\n    login = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(this.state.email)\r\n        console.log(this.state.password)\r\n\r\n        const credentials = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post('/auth/login', credentials)\r\n        .then( res => {\r\n            console.log(res.data);\r\n            window.location = '/'\r\n        })\r\n    }\r\n\r\n    onChangeEmail = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePassword = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    editValue(name) {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            return this.props.location.state[name];\r\n        }\r\n        else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        //setValues({ ...values, [name]: event.target.value });\r\n        console.log(this.props)\r\n        this.setState({\r\n            [`${name}`]: event.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className='login'>\r\n                <Card className=\"tile\">\r\n                    <div className=\"flexColumnCenter\" >\r\n                        {/* <img src={Logo} style={{height: 200 + 'px'}}/> */}\r\n                        <h1 className=\"loginTitle\">Kabling Comics</h1>\r\n                        <form onSubmit={this.login}>\r\n                            <TextField\r\n                                id=\"outlined-writer\"\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                defaultValue={this.editValue(\"email\")}\r\n                                onChange={this.handleChange(\"email\")}\r\n                                \r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-writer\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                defaultValue={this.editValue(\"password\")}\r\n                                onChange={this.handleChange(\"password\")}\r\n                                \r\n                            />\r\n                            <Button type='submit' onClick={this.props.getSession}>Login</Button>\r\n                            {/* <input placeholder=\"Email\" name=\"email\" onChange={this.onChangeEmail} />\r\n                            <input placeholder=\"Password\" name=\"password\" onChange={this.onChangePassword} />\r\n\r\n                            <input type='submit' onClick={this.props.getSession}/> */}\r\n                            <div id=\"register\">\r\n                              <Link to='/register'>Register</Link>\r\n                            </div>\r\n                            \r\n                        </form>\r\n\r\n                        \r\n                    </div>\r\n\r\n                </Card>\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Login = connect(null, mapDispatchToProps)(ConnectedLogin)\r\nexport default Login","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class Register extends Component {\r\n    register1 = () => {\r\n        axios.get('/auth/addUser')\r\n        .then( res => console.log(res))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className='register'>\r\n                <Card className=\"tile\">\r\n                    <div className=\"flexColumnCenter\" >\r\n                        <h1 className=\"loginTitle\">Register</h1>\r\n                        <form action='/auth/newUser' method='post'>\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"email\"\r\n                            \r\n                            \r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            \r\n                            \r\n                        />\r\n                        <Button type='submit'>Register</Button>\r\n                            {/* <input placeholder='Email' name='email'/>\r\n                            <input placeholder='Password' name='password' />\r\n                            <input type='submit'/> */}\r\n                        </form>\r\n                    </div>\r\n                    \r\n                </Card>\r\n                \r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"../style/slider.css\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nclass ConnectedReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            artist: '',\r\n            coverPrice: '',\r\n            publisher: '',\r\n            releaseDate:'',\r\n            score: '',\r\n            title: '',\r\n            writer:'',\r\n            image:'',\r\n            body:'',\r\n            name:''\r\n          \r\n        };\r\n    }\r\n\r\n    //Make sure to use es7 function declaration so you dont have to bind this\r\n    display = () => {\r\n        console.log(this.props.location.state.id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id,\r\n            artist,\r\n            coverPrice,\r\n            publisher,\r\n            releaseDate,\r\n            score,\r\n            title,\r\n            writer,\r\n            image,\r\n            body,\r\n            admin\r\n            } = this.props.location.state;\r\n        console.log(id, body);\r\n        this.setState({\r\n            id,\r\n            artist,\r\n            coverPrice,\r\n            publisher,\r\n            releaseDate,\r\n            score,\r\n            title,\r\n            writer,\r\n            image,\r\n            body,\r\n            admin\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        const styleInline = {\r\n           \r\n        }\r\n        return (\r\n            <div className=\"review mt-5\">\r\n                \r\n                <div className='row'>\r\n                    <img src={this.state.image} id=\"reviewImage\"></img>\r\n                    <div className=\"ml-5\" id=\"reviewDetails\">\r\n                    {this.props.auth.admin &&\r\n                        <Link id=\"reviewEditButton\"\r\n                            to={{\r\n                            pathname: `/review/${this.state.id}/edit`,\r\n                            state: {\r\n                                id: this.state.id,\r\n                                artist: this.state.artist,\r\n                                coverPrice: this.state.coverPrice,\r\n                                publisher: this.state.publisher,\r\n                                releaseDate: this.state.releaseDate,\r\n                                score: this.state.score,\r\n                                title: this.state.title,\r\n                                writer: this.state.writer,\r\n                                image: this.state.image,\r\n                                body: this.state.body,\r\n                                editOrAdd: \"edit\",\r\n                                \r\n                            }\r\n                        }}>\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"buttonPrimary\">Edit</Button>\r\n                        </Link>\r\n                    }\r\n                    \r\n                        <h3>Title: <span className=\"reviewDescValue\">{this.props.location.state.title}</span></h3>\r\n                        <h3>Writer: <span className=\"reviewDescValue\">{this.state.writer}</span> </h3>\r\n                        <h3>Artist: <span className=\"reviewDescValue\">{this.state.artist}</span> </h3>\r\n                        <h3>Publisher: <span className=\"reviewDescValue\">{this.state.publisher}</span> </h3>\r\n                        <h3>Cover Price: <span className=\"reviewDescValue\">${this.state.coverPrice}</span> </h3>\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                <p className='reviewDescription' style={styleInline}>{this.state.body}</p>\r\n                \r\n                \r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst Review = connect(mapStateToProps)(ConnectedReview)\r\n\r\nexport default Review","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            artist: \"\",\r\n            coverPrice: \"\",\r\n            publisher: \"\",\r\n            releaseDate: \"\",\r\n            score: \"\",\r\n            title: \"\",\r\n            writer: \"\",\r\n            image: \"\",\r\n            body: \"\",\r\n            editOrAdd: this.props.location.state.editOrAdd\r\n        }\r\n    }\r\n\r\n    editValue(name) {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            return this.props.location.state[name];\r\n        }\r\n        else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    editAction = () => {\r\n        console.log(document.getElementById(\"addEditForm\"))\r\n        console.log('edit')\r\n        document.getElementById(\"addEditForm\").action = \"/reviewsdb/editReviewToDB\"\r\n    }\r\n\r\n    addAction = () => {\r\n        console.log('add')\r\n        document.getElementById(\"addEditForm\").action = \"/reviewsdb/addReviewToDB\"\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        //setValues({ ...values, [name]: event.target.value });\r\n        this.setState({\r\n            [`${name}`]: event.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            document.getElementById(\"addEditForm\").action = \"/reviewsdb/editReviewToDB\"\r\n        }\r\n        else {\r\n            document.getElementById(\"addEditForm\").action = \"/reviewsdb/addReviewToDB\"\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        axios.delete(\"/reviewsdb/deleteReview\", {\r\n            data: {id: this.props.location.state.id} \r\n        })\r\n            .then( (response) => {\r\n                console.log(\"Deleted Review Success\");\r\n                window.location = '/';\r\n            })\r\n            .catch( (error) => {\r\n                console.log(error)\r\n                window.location = '/';\r\n            })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"addReview\">\r\n                {this.state.editOrAdd == 'add' && <h1>Add New Review</h1>} \r\n                {this.state.editOrAdd == 'edit' && <h1>Edit Review</h1>} \r\n                <form method=\"post\" id=\"addEditForm\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"displayNone\">\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"ID\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"id\"\r\n                            defaultValue={this.editValue(\"id\")}\r\n                            onChange={this.handleChange(\"id\")}\r\n                            \r\n                        />\r\n                    </div>\r\n                    <TextField\r\n                        id=\"outlined-writer\"\r\n                        label=\"Writer\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"writer\"\r\n                        defaultValue={this.editValue(\"writer\")}\r\n                        onChange={this.handleChange(\"writer\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-title\"\r\n                        label=\"Title\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"title\"\r\n                        defaultValue={this.editValue('title')}\r\n                        onChange={this.handleChange(\"title\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-artist\"\r\n                        label=\"Artist\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"artist\"\r\n                        defaultValue={this.editValue('artist')}\r\n                        onChange={this.handleChange(\"artist\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-publisher\"\r\n                        label=\"Publisher\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"publisher\"\r\n                        defaultValue={this.editValue('publisher')}\r\n                        onChange={this.handleChange(\"publisher\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-release-date\"\r\n                        label=\"Release Date\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"releaseDate\"\r\n                        defaultValue={this.editValue('releaseDate')}\r\n                        onChange={this.handleChange(\"releaseDate\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-cover-price\"\r\n                        label=\"Cover Price\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"coverPrice\"\r\n                        defaultValue={this.editValue('coverPrice')}\r\n                        onChange={this.handleChange(\"coverPrice\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-review\"\r\n                        label=\"Review\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows=\"12\"\r\n                        name=\"review\"\r\n                        defaultValue={this.editValue('body')}\r\n                        onChange={this.handleChange(\"body\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-score\"\r\n                        label=\"Score\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"score\"\r\n                        defaultValue={this.editValue('score')}\r\n                        onChange={this.handleChange(\"score\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-image\"\r\n                        label=\"Image\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"image\"\r\n                        defaultValue={this.editValue('image')}\r\n                        onChange={this.handleChange(\"image\")}\r\n                    />\r\n                    {this.state.editOrAdd == 'add' && <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"buttonPrimary\">Add</Button>} \r\n                    {this.state.editOrAdd == 'edit' && <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"buttonPrimary\">Edit</Button>}\r\n                    {this.state.editOrAdd == 'edit' && <Button variant=\"contained\" color=\"secondary\" className=\"buttonSecondary\" onClick={this.handleDelete} >Delete</Button>}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Logo from '../images/Logo3.gif'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../js/actions'\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (userInfo) => dispatch(login(userInfo)),\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\n\r\n\r\nclass ConnectedAppbar extends Component {\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     if (props.authUser !== state.authUser) {\r\n    //         return {authUser: props.authUser}\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            authUser: null,\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAuth()\r\n        \r\n    }\r\n\r\n    getAuth = () => {\r\n        axios.get('/auth/sessionAuth')\r\n            .then( response => {\r\n                if (response.data) {\r\n                    console.log(response.data)\r\n                    this.props.login(response.data)\r\n                }\r\n                console.log(this.props.auth)\r\n            }).catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n    logout = () => {\r\n        axios.get('/auth/logout')\r\n        .then( response => {\r\n            console.log(response);\r\n            this.props.logout();\r\n        })\r\n        .catch( error => {\r\n            console.log( error )\r\n        })\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"appBar flex-grow\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        {/* <IconButton edge=\"start\" className color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton> */}\r\n                        <img src={Logo} className='MuiToolbar-regular' style={{height: 64 + 'px'}}></img>\r\n                        <Link to=\"/\" className=\"removeUnderline colorWhite flex-grow\" >\r\n                            <Typography variant=\"h6\" >\r\n                                Kabling Comics\r\n                            </Typography>\r\n                        </Link>\r\n                        {this.props.auth.admin && \r\n                            \r\n                            <Link to={{\r\n                                pathname: '/addReview',\r\n                                state: {\r\n                                    editOrAdd: \"add\"\r\n                                }\r\n                            }}className=\"removeUnderline colorWhite\">\r\n                                <Button color=\"inherit\" className=\"removeUnderline colorWhite\">Add Review</Button>\r\n                            </Link>\r\n                            \r\n                        }\r\n                        {!this.props.auth.auth && \r\n                            <Link to='/login' className=\"removeUnderline colorWhite\"  >\r\n                                <Button color=\"inherit\">Login</Button>\r\n                            </Link>\r\n                        }\r\n                        {this.props.auth.auth && \r\n                                <a onClick={this.logout} className=\"removeUnderline colorWhite\">\r\n                                    <Button color=\"inherit\">Logout</Button>\r\n                                </a>\r\n                        }\r\n                        \r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Appbar = connect(mapStateToProps, mapDispatchToProps)(ConnectedAppbar)\r\nexport default Appbar","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Navbar from './components/Navbar.js';\n\n\nimport  './style/app.css'\n\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Review from \"./components/Review\";\n//import Tutorial from './components/Tutorial.js'\nimport AddReview from \"./components/AddReview\";\nimport Appbar from './components/Appbar';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            authUser: null,\n            admin: false,\n            currentUser: null\n        };\n    }\n\n    componentDidMount() {\n        \n        // this.getSession();\n        \n    }\n\n\n\n    componentWillUnmount() {\n        \n    }\n\n    getSession = () => {\n        axios.get('/auth/session')\n            .then( response => {\n                this.setState({\n                    authUser: response.data\n                })\n                console.log(response.data)\n                this.getCurrentUser();\n            })\n            .catch( error => {\n                console.log(error)\n            })\n    }\n\n    getCurrentUser = () => {\n        \n        axios.post('/auth/currentUser', {\n            authUser: this.state.authUser\n        }).then( response => {\n            \n            this.setState({\n                currentUser: response.data,\n                admin: response.data.admin\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className='app-container'>\n                    {/* <Navbar authUser={this.state.authUser} admin={this.state.admin}/> */}\n                    <Appbar authUser={this.state.authUser} admin={this.state.admin}/>\n                    <div className=\"main\">\n                        <Route path=\"/\" exact \n                            render={(props) => <Home {...props} admin={this.state.admin}/>} \n                        />\n                        <Route path='/login' \n                            render={(props) => <Login {...props} />}\n                        />\n                        <Route path='/register' component={Register}/>\n                        <Route path='/review/:reviewNumber' exact component={Review} />\n                        <Route path='/addReview' component={AddReview}/>\n                        <Route path='/review/:reviewNumber/edit' exact component={AddReview}/>\n                    </div>\n                    \n                </div>\n\n                \n            </Router>\n            \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_ARTICLE, REMOVE_ARTICLE } from '../constants/action-types'\r\nimport { combineReducers } from 'redux'\r\nimport  article  from './article'\r\nimport  auth  from './auth'\r\n\r\nconst rootReducer = combineReducers({\r\n    article,\r\n    auth\r\n})\r\n\r\nexport default rootReducer;","import { ADD_ARTICLE, REMOVE_ARTICLE } from '../constants/action-types'\r\n\r\nexport default function article(state = [], action) {\r\n    switch(action.type) {\r\n        case ADD_ARTICLE:\r\n            return state.concat(action.payload)\r\n        case REMOVE_ARTICLE:\r\n            return state.slice(0, state.length -1)\r\n            \r\n        default: \r\n            return state\r\n    }\r\n};","import {LOGIN, LOGOUT} from '../constants/action-types'\r\n\r\nexport default function auth(state = {auth: false, admin: false}, action) {\r\n    switch(action.type) {\r\n        case LOGIN:\r\n            console.log('login action')\r\n            return Object.assign({}, state, {auth: true}, action.payload)\r\n        case LOGOUT:\r\n            return {auth: false}\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './js/store/index'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo3.f5d2c848.gif\";"],"sourceRoot":""}
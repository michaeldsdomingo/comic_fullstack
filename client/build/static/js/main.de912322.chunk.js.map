{"version":3,"sources":["components/Score.js","components/SlideNew.js","components/CarouselBootStrap.js","components/Home.js","components/Navbar.js","components/Login.js","components/Register.js","components/Review.js","components/AddReview.js","components/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["Score","className","this","props","score","React","Component","SlideNew","class","active","style","backgroundImage","image","to","pathname","id","state","artist","coverPrice","publisher","releaseDate","title","writer","body","name","admin","src","alt","CarouselBootStrap","componentDidMount","getReviewsFromDB","dataDB","axios","get","then","response","data","setState","catch","error","console","log","data-ride","data-interval","map","entry","index","href","role","data-slide","aria-hidden","Home","Login","login","e","preventDefault","email","password","credentials","post","res","window","location","onChangeEmail","target","value","onChangePassword","handleChange","event","editOrAdd","Card","onSubmit","TextField","label","margin","variant","defaultValue","editValue","onChange","Button","type","onClick","getSession","Register","register1","action","method","Review","display","color","AddReview","editAction","document","getElementById","addAction","handleSubmit","handleDelete","delete","multiline","rows","Appbar","logout","authUser","AppBar","position","Toolbar","Typography","App","getCurrentUser","currentUser","test","path","exact","render","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de912322.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../style/slider.css\"\r\n\r\nclass Score extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='score-container'>\r\n                                \r\n                    <h1 className='score-number'>{this.props.score}</h1>\r\n                    {/* <div className='critic-text'>\r\n                        <h4 className='score-text'>Based On: </h4>    \r\n                        <h4 className='score-text-critics'> 20 Critics</h4>\r\n                    </div> */}\r\n                                \r\n                </div>\r\n            </div>\r\n                \r\n                \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Score","import React from 'react'\r\nimport \"../style/slider.css\"\r\nimport Score from \"./Score\";\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nclass SlideNew extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div class={`carousel-item ${this.props.active}`} \r\n                style={{\r\n                    backgroundImage: `url(${this.props.image})`\r\n                }}\r\n            >\r\n                <Link to={{\r\n                    pathname: `/review/${this.props.id}`,\r\n                    state: {\r\n                        id: this.props.id,\r\n                        artist: this.props.artist,\r\n                        coverPrice: this.props.coverPrice,\r\n                        publisher: this.props.publisher,\r\n                        releaseDate: this.props.releaseDate,\r\n                        score: this.props.score,\r\n                        title: this.props.title,\r\n                        writer: this.props.writer,\r\n                        image: this.props.image,\r\n                        body: this.props.body,\r\n                        name: this.props.name,\r\n                        admin: this.props.admin\r\n                    }\r\n                }}>\r\n                    <div class=\"\">\r\n                        <div class=\"bgBlack\">\r\n                            <div class=\"d-flex justify-content-center align-items-center slideNew\">\r\n                                <img src={this.props.image} class=\"d-block \" alt=\"...\" />\r\n                                <div class=\"d-flex flex-column justify-content-center ml-5\" id=\"comicDetails\">\r\n                                    <div>Writer: {this.props.writer}</div>\r\n                                    <div>Artist: {this.props.artist}</div>\r\n                                    <div>Publisher: {this.props.publisher}</div>\r\n                                    <div>Release Date: {this.props.releaseDate}</div>\r\n                                    <div>Cover Price: ${this.props.coverPrice}</div>\r\n                                    <Score score={this.props.score}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                   \r\n                </Link>\r\n                    \r\n            </div>\r\n                \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SlideNew","import React, { Component } from 'react';\r\nimport SlideNew from \"./SlideNew\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class CarouselBootStrap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dataDB: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getReviewsFromDB();\r\n    }\r\n\r\n    getReviewsFromDB = () => {\r\n        var dataDB;\r\n        axios.get('/reviewsdb/getReviews')\r\n            .then((response) => {\r\n                //console.log(response.data.data);\r\n                dataDB = response.data.data;\r\n                this.setState({dataDB});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error, \"get reviews from db unsuccessful\");\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\" data-interval=\"4000\">\r\n                    \r\n                    <div className=\"carousel-inner\">\r\n                        {this.state.dataDB.map( (entry, index) => {\r\n                            if (index == 0) {\r\n                                return <SlideNew id={entry['id']} \r\n                                                writer={entry['writer']}\r\n                                                title={entry['title']}\r\n                                                artist={entry['artist']}\r\n                                                publisher={entry['publisher']} \r\n                                                releaseDate={entry['releaseDate']}\r\n                                                coverPrice={entry['coverPrice']}\r\n                                                image={entry['imageURL']}\r\n                                                body={entry['body']}\r\n                                                score={entry['score']}\r\n                                                name={entry.name}\r\n                                                active={\"active\"}\r\n                                                admin={this.props.admin}/>\r\n                            }\r\n                            else {\r\n                                return <SlideNew id={entry['id']}\r\n                                                writer={entry['writer']}\r\n                                                title={entry['title']}\r\n                                                artist={entry['artist']}\r\n                                                publisher={entry['publisher']} \r\n                                                releaseDate={entry['releaseDate']}\r\n                                                coverPrice={entry['coverPrice']}\r\n                                                image={entry['imageURL']}\r\n                                                body={entry['body']}\r\n                                                score={entry['score']}\r\n                                                name={entry.name}\r\n                                                active={\"\"}\r\n                                                admin={this.props.admin}/>\r\n                            }\r\n                            \r\n                        }) \r\n                        }\r\n                        \r\n                        <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CarouselBootStrap from './CarouselBootStrap.js';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                <CarouselBootStrap admin={this.props.admin}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport '../style/navbar.css';\r\nimport Home from './Home';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     if (props.authUser !== state.authUser) {\r\n    //         return {authUser: props.authUser}\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            authUser: null,\r\n            state: 'hello'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    logout = () => {\r\n        axios.get('/auth/logout')\r\n        .then( response => {\r\n            console.log(response);\r\n            \r\n        })\r\n        .catch( error => {\r\n            console.log( error )\r\n        })\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbarHeader\">\r\n                <div id=\"navbar\">\r\n                    <ul>\r\n                        <li id='title'>\r\n                            <Link to=\"/\" className=\"removeUnderline colorWhite\">Kabling Comics</Link>\r\n                        </li>\r\n                        <div className='align-right'>\r\n                            {this.props.admin && \r\n                                <li>\r\n                                    <Link to={{\r\n                                        pathname: '/addReview',\r\n                                        state: {\r\n                                            editOrAdd: \"add\"\r\n                                        }\r\n                                    }}className=\"removeUnderline colorWhite\">Add Review</Link>\r\n                                </li>\r\n                            }\r\n                            \r\n                            {!this.props.authUser && <li>\r\n                                <Link to='/login' className=\"removeUnderline colorWhite\"  >Login</Link>\r\n                            </li>}\r\n                            {this.props.authUser && <li>\r\n                                <a onClick={this.logout} className=\"removeUnderline colorWhite\">Logout</a>\r\n                            </li>}\r\n                            \r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    login = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(this.state.email)\r\n        console.log(this.state.password)\r\n\r\n        const credentials = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post('/auth/login', credentials)\r\n        .then( res => {\r\n            console.log(res.data);\r\n            window.location = '/'\r\n        })\r\n    }\r\n\r\n    onChangeEmail = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePassword = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    editValue(name) {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            return this.props.location.state[name];\r\n        }\r\n        else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        //setValues({ ...values, [name]: event.target.value });\r\n        this.setState({\r\n            [`${name}`]: event.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className='login'>\r\n                <Card className=\"tile\">\r\n                    <div className=\"flexColumnCenter\" >\r\n                        <h1 className=\"loginTitle\">Kabling Comics</h1>\r\n                        <form onSubmit={this.login}>\r\n                            <TextField\r\n                                id=\"outlined-writer\"\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                defaultValue={this.editValue(\"email\")}\r\n                                onChange={this.handleChange(\"email\")}\r\n                                \r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-writer\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                defaultValue={this.editValue(\"password\")}\r\n                                onChange={this.handleChange(\"password\")}\r\n                                \r\n                            />\r\n                            <Button type='submit' onClick={this.props.getSession}>Login</Button>\r\n                            {/* <input placeholder=\"Email\" name=\"email\" onChange={this.onChangeEmail} />\r\n                            <input placeholder=\"Password\" name=\"password\" onChange={this.onChangePassword} />\r\n\r\n                            <input type='submit' onClick={this.props.getSession}/> */}\r\n                            <div id=\"register\">\r\n                              <Link to='/register'>Register</Link>\r\n                            </div>\r\n                            \r\n                        </form>\r\n\r\n                        \r\n                    </div>\r\n\r\n                </Card>\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default class Register extends Component {\r\n    register1 = () => {\r\n        axios.get('/auth/addUser')\r\n        .then( res => console.log(res))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className='register'>\r\n                <Card className=\"tile\">\r\n                    <div className=\"flexColumnCenter\" >\r\n                        <h1 className=\"loginTitle\">Register</h1>\r\n                        <form action='/auth/newUser' method='post'>\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"email\"\r\n                            \r\n                            \r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"password\"\r\n                            \r\n                            \r\n                        />\r\n                        <Button type='submit'>Register</Button>\r\n                            {/* <input placeholder='Email' name='email'/>\r\n                            <input placeholder='Password' name='password' />\r\n                            <input type='submit'/> */}\r\n                        </form>\r\n                    </div>\r\n                    \r\n                </Card>\r\n                \r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"../style/slider.css\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nclass Review extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            artist: '',\r\n            coverPrice: '',\r\n            publisher: '',\r\n            releaseDate:'',\r\n            score: '',\r\n            title: '',\r\n            writer:'',\r\n            image:'',\r\n            body:'',\r\n            name:''\r\n          \r\n        };\r\n    }\r\n\r\n    //Make sure to use es7 function declaration so you dont have to bind this\r\n    display = () => {\r\n        console.log(this.props.location.state.id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id,\r\n            artist,\r\n            coverPrice,\r\n            publisher,\r\n            releaseDate,\r\n            score,\r\n            title,\r\n            writer,\r\n            image,\r\n            body,\r\n            admin\r\n            } = this.props.location.state;\r\n        console.log(id, body);\r\n        this.setState({\r\n            id,\r\n            artist,\r\n            coverPrice,\r\n            publisher,\r\n            releaseDate,\r\n            score,\r\n            title,\r\n            writer,\r\n            image,\r\n            body,\r\n            admin\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        const styleInline = {\r\n           \r\n        }\r\n        return (\r\n            <div className=\"review mt-5\">\r\n                \r\n                <div className='row'>\r\n                    <img src={this.state.image} id=\"reviewImage\"></img>\r\n                    <div className=\"ml-5\" id=\"reviewDetails\">\r\n                    {this.state.admin &&\r\n                        <Link id=\"reviewEditButton\"\r\n                            to={{\r\n                            pathname: `/review/${this.state.id}/edit`,\r\n                            state: {\r\n                                id: this.state.id,\r\n                                artist: this.state.artist,\r\n                                coverPrice: this.state.coverPrice,\r\n                                publisher: this.state.publisher,\r\n                                releaseDate: this.state.releaseDate,\r\n                                score: this.state.score,\r\n                                title: this.state.title,\r\n                                writer: this.state.writer,\r\n                                image: this.state.image,\r\n                                body: this.state.body,\r\n                                editOrAdd: \"edit\",\r\n                                \r\n                            }\r\n                        }}>\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"buttonPrimary\">Edit</Button>\r\n                        </Link>\r\n                    }\r\n                    \r\n                        <h3>Title: <span className=\"reviewDescValue\">{this.state.title}</span></h3>\r\n                        <h3>Writer: <span className=\"reviewDescValue\">{this.state.writer}</span> </h3>\r\n                        <h3>Artist: <span className=\"reviewDescValue\">{this.state.artist}</span> </h3>\r\n                        <h3>Publisher: <span className=\"reviewDescValue\">{this.state.publisher}</span> </h3>\r\n                        <h3>Cover Price: <span className=\"reviewDescValue\">${this.state.coverPrice}</span> </h3>\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                <p className='reviewDescription' style={styleInline}>{this.state.body}</p>\r\n                \r\n                \r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Review","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            artist: \"\",\r\n            coverPrice: \"\",\r\n            publisher: \"\",\r\n            releaseDate: \"\",\r\n            score: \"\",\r\n            title: \"\",\r\n            writer: \"\",\r\n            image: \"\",\r\n            body: \"\",\r\n            editOrAdd: this.props.location.state.editOrAdd\r\n        }\r\n    }\r\n\r\n    editValue(name) {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            return this.props.location.state[name];\r\n        }\r\n        else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    editAction = () => {\r\n        console.log(document.getElementById(\"addEditForm\"))\r\n        console.log('edit')\r\n        document.getElementById(\"addEditForm\").action = \"/reviewsdb/editReviewToDB\"\r\n    }\r\n\r\n    addAction = () => {\r\n        console.log('add')\r\n        document.getElementById(\"addEditForm\").action = \"/reviewsdb/addReviewToDB\"\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        //setValues({ ...values, [name]: event.target.value });\r\n        this.setState({\r\n            [`${name}`]: event.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.editOrAdd == \"edit\") {\r\n            document.getElementById(\"addEditForm\").action = \"/reviewsdb/editReviewToDB\"\r\n        }\r\n        else {\r\n            document.getElementById(\"addEditForm\").action = \"/reviewsdb/addReviewToDB\"\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        axios.delete(\"/reviewsdb/deleteReview\", {\r\n            data: {id: this.props.location.state.id} \r\n        })\r\n            .then( (response) => {\r\n                console.log(\"Deleted Review Success\");\r\n                window.location = '/';\r\n            })\r\n            .catch( (error) => {\r\n                console.log(error)\r\n                window.location = '/';\r\n            })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"addReview\">\r\n                {this.state.editOrAdd == 'add' && <h1>Add New Review</h1>} \r\n                {this.state.editOrAdd == 'edit' && <h1>Edit Review</h1>} \r\n                <form method=\"post\" id=\"addEditForm\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"displayNone\">\r\n                        <TextField\r\n                            id=\"outlined-writer\"\r\n                            label=\"ID\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"id\"\r\n                            defaultValue={this.editValue(\"id\")}\r\n                            onChange={this.handleChange(\"id\")}\r\n                            \r\n                        />\r\n                    </div>\r\n                    <TextField\r\n                        id=\"outlined-writer\"\r\n                        label=\"Writer\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"writer\"\r\n                        defaultValue={this.editValue(\"writer\")}\r\n                        onChange={this.handleChange(\"writer\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-title\"\r\n                        label=\"Title\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"title\"\r\n                        defaultValue={this.editValue('title')}\r\n                        onChange={this.handleChange(\"title\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-artist\"\r\n                        label=\"Artist\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"artist\"\r\n                        defaultValue={this.editValue('artist')}\r\n                        onChange={this.handleChange(\"artist\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-publisher\"\r\n                        label=\"Publisher\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"publisher\"\r\n                        defaultValue={this.editValue('publisher')}\r\n                        onChange={this.handleChange(\"publisher\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-release-date\"\r\n                        label=\"Release Date\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"releaseDate\"\r\n                        defaultValue={this.editValue('releaseDate')}\r\n                        onChange={this.handleChange(\"releaseDate\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-cover-price\"\r\n                        label=\"Cover Price\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"coverPrice\"\r\n                        defaultValue={this.editValue('coverPrice')}\r\n                        onChange={this.handleChange(\"coverPrice\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-review\"\r\n                        label=\"Review\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows=\"12\"\r\n                        name=\"review\"\r\n                        defaultValue={this.editValue('body')}\r\n                        onChange={this.handleChange(\"body\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-score\"\r\n                        label=\"Score\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"score\"\r\n                        defaultValue={this.editValue('score')}\r\n                        onChange={this.handleChange(\"score\")}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-image\"\r\n                        label=\"Image\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        name=\"image\"\r\n                        defaultValue={this.editValue('image')}\r\n                        onChange={this.handleChange(\"image\")}\r\n                    />\r\n                    {this.state.editOrAdd == 'add' && <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"buttonPrimary\">Add</Button>} \r\n                    {this.state.editOrAdd == 'edit' && <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"buttonPrimary\">Edit</Button>}\r\n                    {this.state.editOrAdd == 'edit' && <Button variant=\"contained\" color=\"secondary\" className=\"buttonSecondary\" onClick={this.handleDelete} >Delete</Button>}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n\r\nclass Appbar extends Component {\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     if (props.authUser !== state.authUser) {\r\n    //         return {authUser: props.authUser}\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            authUser: null,\r\n            state: 'hello'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    logout = () => {\r\n        axios.get('/auth/logout')\r\n        .then( response => {\r\n            console.log(response);\r\n            \r\n        })\r\n        .catch( error => {\r\n            console.log( error )\r\n        })\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"appBar flex-grow\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        {/* <IconButton edge=\"start\" className color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton> */}\r\n                        <Link to=\"/\" className=\"removeUnderline colorWhite flex-grow\" >\r\n                            <Typography variant=\"h6\" >\r\n                                Kabling Comics\r\n                            </Typography>\r\n                        </Link>\r\n                        {this.props.admin && \r\n                            \r\n                            <Link to={{\r\n                                pathname: '/addReview',\r\n                                state: {\r\n                                    editOrAdd: \"add\"\r\n                                }\r\n                            }}className=\"removeUnderline colorWhite\">\r\n                                <Button color=\"inherit\" className=\"removeUnderline colorWhite\">Add Review</Button>\r\n                            </Link>\r\n                            \r\n                        }\r\n                        {!this.props.authUser && \r\n                            <Link to='/login' className=\"removeUnderline colorWhite\"  >\r\n                                <Button color=\"inherit\">Login</Button>\r\n                            </Link>\r\n                        }\r\n                        {this.props.authUser && \r\n                                <a onClick={this.logout} className=\"removeUnderline colorWhite\">\r\n                                    <Button color=\"inherit\">Logout</Button>\r\n                                </a>\r\n                        }\r\n                        \r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Appbar","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Navbar from './components/Navbar.js';\n\n\nimport  './style/app.css'\n\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Review from \"./components/Review\";\n//import Tutorial from './components/Tutorial.js'\nimport AddReview from \"./components/AddReview\";\nimport Appbar from './components/Appbar';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            authUser: null,\n            test: 'world',\n            admin: false,\n            currentUser: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('app did mount')\n        this.getSession();\n        \n    }\n\n\n\n    componentWillUnmount() {\n        \n    }\n\n    getSession = () => {\n        axios.get('/auth/session')\n        .then( response => {\n            this.setState({\n                authUser: response.data\n            })\n            console.log(response.data)\n            this.getCurrentUser();\n        })\n        .catch( error => {\n            console.log(error)\n        })\n    }\n\n    getCurrentUser = () => {\n        \n        axios.post('/auth/currentUser', {\n            authUser: this.state.authUser\n        })\n        .then( response => {\n            console.log(response.data)\n            this.setState({\n                currentUser: response.data,\n                admin: response.data.admin\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className='app-container'>\n                    {/* <Navbar authUser={this.state.authUser} admin={this.state.admin}/> */}\n                    <Appbar authUser={this.state.authUser} admin={this.state.admin}/>\n                    <div className=\"main\">\n                        <Route path=\"/\" exact \n                            render={(props) => <Home {...props} admin={this.state.admin}/>} \n                        />\n                        <Route path='/login' \n                            render={(props) => <Login {...props} />}\n                        />\n                        <Route path='/register' component={Register}/>\n                        <Route path='/review/:reviewNumber' exact component={Review} />\n                        <Route path='/addReview' component={AddReview}/>\n                        <Route path='/review/:reviewNumber/edit' exact component={AddReview}/>\n                    </div>\n                    \n                </div>\n\n                \n            </Router>\n            \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}